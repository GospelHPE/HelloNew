package com.huawei.xdevice.floatrobot.utils;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;

import android.annotation.SuppressLint;
import android.util.Log;

public class GetEvent {

	private static String TAG = GetEvent.class.getSimpleName();
	static boolean runCatchHomeFlag = true;

	private static final int MSG_CATCH_HOME = 0x100;
	static StringBuffer sb = new StringBuffer("***");

	public static String getEvents() {
		System.out.println("****event信息  " + sb.toString());
		// createCatchHomeThread().start();
		new Thread(new Runnable() {
			public void run() {
				System.out.println("****命令线程启动");
				//execShellCmd("su");
				sb.append(execShellCmd("getevent -l"));
			}
		}).start();
		return sb.toString();
	}

	/**
	 * 执行shell命令
	 * 
	 * @param cmd
	 */
	public static String execShellCmd(String cmd) {
		StringBuffer sb = new StringBuffer("--");
		try {
			BufferedReader reader = null;
			// 申请获取root权限，这一步很重要，不然会没有作用
			Process process = Runtime.getRuntime().exec(cmd);
			reader = new BufferedReader(new InputStreamReader(
					process.getInputStream()));
			String line;
			while ((line = reader.readLine()) != null && runCatchHomeFlag) {
				System.out.println("****读取信息**********");
				sb.append("/n").append(line);
			}
			// // 获取输出流
			// OutputStream outputStream = process.getOutputStream();
			// DataOutputStream dataOutputStream = new DataOutputStream(
			// outputStream);
			// dataOutputStream.writeBytes(cmd);
			//
			// dataOutputStream.flush();
			// dataOutputStream.close();
			// outputStream.close();
		} catch (Throwable t) {
			t.printStackTrace();
		}
		return sb.toString();
	}

	@SuppressLint("SimpleDateFormat")
	public static Thread createCatchHomeThread() {

		return new Thread(new Runnable() {
			public void run() {
				Process mLogcatProc = null;
				BufferedReader reader = null;

				// 记录线程开始的时间
				Date date = new Date(System.currentTimeMillis());
				SimpleDateFormat fmt = new SimpleDateFormat(
						"MM-dd hh:mm:ss.SSS");
				String startDateString = fmt.format(date);

				try {
					/*
					 * 获取logcat信息 logcat:日志类型为logcat -v 带有format的输出 time
					 * 一种format 表示输出日志带着时间 ActivityManager日志Tag为ActivityManager
					 * I:logcat的标识分为： D ：Debug I ：Info W ：Warning E ：Error F
					 * ：Fatal S ：Silent）这里I代表Info。 *:S:日志的所有内容
					 */
					mLogcatProc = Runtime.getRuntime().exec("su");
					mLogcatProc = Runtime.getRuntime().exec(
							new String[] { "getevent", "-l" });
					System.out.println("***执行getevent*命令********");
					reader = new BufferedReader(new InputStreamReader(
							mLogcatProc.getInputStream()));

					Log.d(TAG, "start catch home");
					String line;
					while ((line = reader.readLine()) != null
							&& runCatchHomeFlag) {
						System.out.println("****读取信息**********");
						sb.append("\n").append(line);
						// int indexOfHome = line
						// .indexOf("android.intent.category.HOME");
						// if (indexOfHome > 0) {
						// // 捕获到HOME键后发送message，在handler中可以自主处理。
						// // Log.e(TAG, "home event thrown");
						// String[] arr = line.split(" ");
						// if (arr.length >= 2) {
						// String time;
						// time = arr[0] + " " + arr[1];
						// // Home事件发生时间大于线程开始监听的时间才进行响应
						// if (time.compareTo(startDateString) >= 0) {
						// Log.e(TAG, startDateString
						// + " -> catch home event: " + line);
						// // 删除日志，有的手机删除不了，所以需要根据时间来判断是否是监听线程开始以后的home时间
						// // Runtime.getRuntime().exec("logcat -c");
						// // mHandler.sendMessage(mHandler
						// // .obtainMessage(MSG_CATCH_HOME));
						runCatchHomeFlag = false;
						// break;
						// }
						// }
						// }
					}
					Log.d(TAG, "stop catch home");
				} catch (Exception e) {
					Log.e(TAG, "getevent命令执行错误::" + e);
				}
			}

		});
	}

}
